% script to take best station depths from station_depths_cruise.mat
% (generated by populate_station_depths.m)
% and output them to proc2.dat.  you will then need to copy this to
% proc.dat by hand and carry on (or redo) the UH WOCE shear processing from
% the domerge -c1 stage.  
%
% UH WOCE shear processing uses the depths from proc.dat at the domerge -c1
% stage, so you 
% proc.dat 
% needs to be adapted for general cruise, or edited per cruise

% output to proc2.dat; copy back to proc.dat by hand;
% selects the latest entry in proc.dat for a sation, and sorts output by
% station number

mcruise = MEXEC_G.MSCRIPT_CRUISE_STRING;

pro = [MEXEC_G.MEXEC_DATA_ROOT '/ladcp/uh/pro/' ];
prodir = [];
cmd = ['ls ' pro]; [d1 d2] = unix(cmd);
% hope to get a single 6-char directory name
d2 = d2(1:end-1); % truncate the LF (ascii 10) at end of d2.
while exist(prodir,'dir') ~= 7
    while length(d2) ~= 6
    m1 = 'There was a problem identifying the 6-character name of the cruise directory';
    m2 = 'eg jc1802';
    d2 = input([m1 '\n' m2 '\nType in the name now: '],'s');
    end
ldir = d2;
prodir = [pro ldir];
d2 = [];
end

fprintf(1,'%s %s %s\n','Directory',prodir,'identified')

fndep = [MEXEC_G.MEXEC_DATA_ROOT '/station_depths/station_depths_' mcruise '.mat'];
fnproc = [MEXEC_G.MEXEC_DATA_ROOT '/ladcp/uh/pro/' ldir '/ladcp/proc/proc.dat'];
fncopy = [MEXEC_G.MEXEC_DATA_ROOT '/ladcp/uh/pro/' ldir '/ladcp/proc/proc0.dat'];
fnot = [MEXEC_G.MEXEC_DATA_ROOT '/ladcp/uh/pro/' ldir '/ladcp/proc/proc2.dat'];

%read in existing proc.dat
indata = mtextdload(fnproc);
nstat = length(indata)/6;
if nstat ~= round(nstat)
    fprintf(2,'%s\n','number of lines in proc.dat is not a multiple of 6')
    return
end
indata = reshape(indata,6,nstat);

%get list of stations and cast numbers
snum = nan(1,nstat);
cnum = nan(1,nstat);
for kl = 1:nstat
    s1c = indata{2,kl};
    s1 = s1c{1}; while(strcmp(s1(1),' ')); s1(1) = []; end
    snum(kl) = str2num(s1(2:4)); % list of stations found in proc.dat
    cnum(kl) = str2num(s1(6:7)); % match cast number as well
end

%load bestdeps; this is either a 1-D array indexed by station number or a
%two-column array with station number as the first column
load(fndep,'bestdeps')
if size(bestdeps, 2)==1
    bestdeps = [[1:length(bestdeps)]' bestdeps]; 
end

%for each station and cast, write the last entry to proc2.dat, with
%modified depth
snums = unique(snum); cnums = unique(cnum);
fid = fopen(fnot,'w');
for kl = snums
    kmatch = find(bestdeps(:,1) == kl);

    for klc = cnums
        kok = find(snum == kl & cnum == klc);
        if isempty(kok); continue; end
        
        %will write back the last entry for this station/cast
        kuse = max(kok);
        otdata = indata(:, kuse);
        
        deplinec = otdata{5}; % cell
        depline = deplinec{1};
        khash = min(strfind(depline,'#'));
        if isempty(khash)
            fprintf(2,'%s\n',['Error in finding hash in line 5 of station ' sprintf('%d',kl)]);
            return
        end
        olddep = str2num(depline(1:khash-1));
        
        if length(kmatch) == 1
            newdep = bestdeps(kmatch,2);
        else
            newdep = olddep;
        end
        %put new depth at front of line, and old line to the right, as a
        %comment
        if newdep ~= olddep
            depline = [sprintf(' %10.1f # new dep from IX or elsewhere',newdep) depline];
        end
        
        %print lines back to fnot, with new depths
        for ko = 1:6
            ocell = otdata{ko};
            ostr = ocell{1};
            if ko == 5; ostr = depline; end
            fprintf(fid,'%s\n',ostr);
        end
        
    end
end

fclose(fid);

%now check whether to overwrite proc.dat
disp('about to overwrite proc.dat with new proc2.dat');
domv = input('are you sure you want to go ahead? (y/n)','s');
if strcmp(domv, 'y')
    disp(['copying ' fnproc ' to ' fncopy])
    unix(['/bin/cp -p ' fnproc ' ' fncopy]);
    disp(['moving ' fnot ' to ' fnproc])
    unix(['/bin/mv ' fnot ' ' fnproc]);
    disp(['proc.dat contains new depths (previous version of proc.dat'])
    disp(['now in proc0.dat)'])
    disp(['now rerun shear processing from domerge -c1 stage on'])
else
    disp(['not overwritting; old depths remain in proc.dat and new in'])
    disp(['proc2.dat; copy by hand'])
    disp(['before rerunning shear processing from domerge -c1 stage on'])
end
